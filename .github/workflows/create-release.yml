name: Create Release on PR Merge with "release" label

on:
  pull_request:
    types: [closed]
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  create_release:
    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Poetry and dependencies
        run: |
          pip install poetry
          poetry install

      - name: Read version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION"

      - name: Fail if pyproject.toml was not changed
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          CHANGED=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...HEAD | grep "pyproject.toml" || true)
          if [ -z "$CHANGED" ]; then
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -X POST \
              -d "{\"body\": \"❌ Release PR denied: the file \`pyproject.toml\` **was not modified**.\"}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
            exit 1
          fi

      - name: Check if tag already exists
        run: |
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -X POST \
              -d "{\"body\": \"❌ Release PR denied: the tag \`v$VERSION\` **already exists**. Please update the version in \`pyproject.toml\`.\"}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
            exit 1
          fi

      - name: Check that new version is greater than the latest release
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          CLEAN_LATEST=$(echo "$LATEST_TAG" | sed 's/^v//')
          echo "Latest tag: $CLEAN_LATEST"
          echo "Current version: $VERSION"
          if [ "$(printf '%s\n' "$CLEAN_LATEST" "$VERSION" | sort -V | head -n1)" = "$VERSION" ] && [ "$CLEAN_LATEST" != "$VERSION" ]; then
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -X POST \
              -d "{\"body\": \"❌ Release PR denied: the new version \`$VERSION\` is **less than or equal to** the latest version \`$CLEAN_LATEST\`. Please update the version in \`pyproject.toml\`.\"}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: "Release notes for version ${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
